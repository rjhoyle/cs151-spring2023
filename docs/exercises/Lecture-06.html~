<!DOCTYPE html>
<html lang="en"><head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1"><!-- Begin Jekyll SEO tag v2.6.1 -->
<title>Lecture 24 | Your awesome title</title>
<meta name="generator" content="Jekyll v4.1.1" />
<meta property="og:title" content="Lecture 24" />
<meta property="og:locale" content="en_US" />
<meta name="description" content="Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description." />
<meta property="og:description" content="Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description." />
<link rel="canonical" href="http://localhost:4000/exercises/Lecture-24.html" />
<meta property="og:url" content="http://localhost:4000/exercises/Lecture-24.html" />
<meta property="og:site_name" content="Your awesome title" />
<script type="application/ld+json">
{"headline":"Lecture 24","description":"Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.","@type":"WebPage","url":"http://localhost:4000/exercises/Lecture-24.html","@context":"https://schema.org"}</script>
<!-- End Jekyll SEO tag -->
<link rel="stylesheet" href="/assets/main.css"><link type="application/atom+xml" rel="alternate" href="http://localhost:4000/feed.xml" title="Your awesome title" /></head>
<body><main class="page-content" aria-label="Content">
      <div class="wrapper">
        <h1 id="lecture-24--apr-10th-2020">Lecture 24 – Apr 10th, 2020</h1>

<h2 id="setup">Setup</h2>
<ol>
  <li>Log in to clyde.</li>
  <li>Download <a href="data.txt">data.txt</a> using <code class="language-plaintext highlighter-rouge">wget(1)</code> or <code class="language-plaintext highlighter-rouge">curl(1)</code>.</li>
</ol>

<h2 id="task">Task</h2>
<ol>
  <li>
    <p><code class="language-plaintext highlighter-rouge">data.txt</code> consists of a table of information regarding government offices
including phone numbers of the administrators in charge of the office. Each
line in the file consists of a number of tab-delimited fields. The first
line of the file gives the name of each field.</p>

    <p>Write a single regular expression for use with <code class="language-plaintext highlighter-rouge">grep -E</code> to output all of
the lines in <code class="language-plaintext highlighter-rouge">data.txt</code> containing phone numbers in the 202 and 314 area
codes.</p>

    <p>If you use <code class="language-plaintext highlighter-rouge">$ grep -E --color regex data.txt</code> it will highlight the matches
in the line so you can be sure it’s matching the correct things. There
should be 42 matching lines.</p>
  </li>
  <li>
    <p>Write a <code class="language-plaintext highlighter-rouge">sed(1)</code> substitution command to print out the <code class="language-plaintext highlighter-rouge">Symbol</code>
corresponding to each organization in the <code class="language-plaintext highlighter-rouge">Archives I</code> building.</p>

    <p>You’re going to want to use the <code class="language-plaintext highlighter-rouge">-n</code> option to <code class="language-plaintext highlighter-rouge">sed(1)</code> to suppress
printing lines by default and use the <code class="language-plaintext highlighter-rouge">p</code> flag to the substitution command
to print lines on which a substitution was performed. In other words, you
want to use <code class="language-plaintext highlighter-rouge">sed -E -n</code> and the substitution should be
<code class="language-plaintext highlighter-rouge">s/regex/replacement/p</code>.</p>

    <p>Hint:</p>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sed -E -n '/\tArchives I\t/p' data.txt
</code></pre></div>    </div>
    <p>uses the <code class="language-plaintext highlighter-rouge">p</code> (print) command to print all lines matching <code class="language-plaintext highlighter-rouge">Archive I</code>
surrounded by tabs. Replace the <code class="language-plaintext highlighter-rouge">p</code> with a suitable <code class="language-plaintext highlighter-rouge">s///p</code> to extract just the
symbol from those lines, assuming it’s not blank.</p>

    <p>There are 16 such symbols. The first three lines of output should be</p>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>N
NCON
NHPRC
</code></pre></div>    </div>
  </li>
  <li>Write a <code class="language-plaintext highlighter-rouge">sed(1)</code> substitution command that matches lines with phone numbers
in the 202 and 314 area codes <em>and</em> has a nonblank person in charge. The
substitution command should replace each matching line with
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[Symbol] In Charge: Phone
</code></pre></div>    </div>
    <p>where <code class="language-plaintext highlighter-rouge">Symbol</code>, <code class="language-plaintext highlighter-rouge">In Charge</code>, and <code class="language-plaintext highlighter-rouge">Phone</code> correspond to the fields in the
line with those names.</p>

    <p>The first two lines of output should be</p>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[N] David S Ferriero: 202-357-5900
[ND] Debra Steidel Wall: 202-357-5900
</code></pre></div>    </div>
    <p>and there should be 39 lines in total.</p>

    <p>Note that some of the lines with telephone numbers in the appropriate area
codes do not have a person in charge and thus should <em>not</em> be printed. The
line with the Symbol <code class="language-plaintext highlighter-rouge">AFN-MR</code> is an example of one that should not be
printed.</p>

    <p>This one is complicated, try building it up your regular expression piece
by piece. The fields are separated by tabs and you can use <code class="language-plaintext highlighter-rouge">\t</code> to match a
tab.</p>
  </li>
  <li>Repeat 2 and 3, but use <code class="language-plaintext highlighter-rouge">awk(1)</code> instead of <code class="language-plaintext highlighter-rouge">sed(1)</code>.</li>
</ol>

      </div>
    </main></body>

</html>
